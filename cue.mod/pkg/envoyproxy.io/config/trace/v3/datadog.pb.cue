package v3

import (
	durationpb "envoyproxy.io/deps/protobuf/types/known/durationpb"
)

// Configuration for the Remote Configuration feature.
#DatadogRemoteConfig: {
	"@type": "type.googleapis.com/envoy.config.trace.v3.DatadogRemoteConfig"
	// Frequency at which new configuration updates are queried.
	// If no value is provided, the default value is delegated to the Datadog tracing library.
	polling_interval?: durationpb.#Duration
}

// Configuration for the Datadog tracer.
// [#extension: envoy.tracers.datadog]
#DatadogConfig: {
	"@type": "type.googleapis.com/envoy.config.trace.v3.DatadogConfig"
	// The cluster to use for submitting traces to the Datadog agent.
	collector_cluster?: string
	// The name used for the service when traces are generated by envoy.
	service_name?: string
	// Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
	// that require a specific hostname. Defaults to :ref:`collector_cluster <envoy_v3_api_field_config.trace.v3.DatadogConfig.collector_cluster>` above.
	collector_hostname?: string
	// Enables and configures remote configuration.
	// Remote Configuration allows to configure the tracer from Datadog's user interface.
	// This feature can drastically increase the number of connections to the Datadog Agent.
	// Each tracer regularly polls for configuration updates, and the number of tracers is the product
	// of the number of listeners and worker threads.
	remote_config?: #DatadogRemoteConfig
}
